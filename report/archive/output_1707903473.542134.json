{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 8}, "tests": {"0": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x10277b8b0>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_bandcreate>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_bandcreate", "rerun": "0"}, "1": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x1027c5790>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_bandwrite>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_bandwrite", "rerun": "0"}, "2": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x103193e50>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_commentdel>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_commentdel", "rerun": "0"}, "3": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x103081ee0>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_commentedit>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_commentedit", "rerun": "0"}, "4": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x1017055e0>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_login>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_login", "rerun": "0"}, "5": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x103193f70>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_postcomment>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_postcomment", "rerun": "0"}, "6": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x103081ee0>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_postdel>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_postdel", "rerun": "0"}, "7": {"status": "ERROR", "message": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x1031e4c10>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:266: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_hooks.py:501: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/pluggy/_manager.py:119: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:833: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../Library/Python/3.9/lib/python/site-packages/_pytest/logging.py:822: in _runtest_for\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/capture.py:877: in pytest_runtest_setup\n    return (yield)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../Library/Python/3.9/lib/python/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook\n    yield\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:161: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:517: in setup\n    raise exc\n../../Library/Python/3.9/lib/python/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestCaseFunction test_postedit>\n\n    def setup(self) -> None:\n        # A bound method to be called during teardown() if set (see 'runtest()').\n        self._explicit_tearDown: Optional[Callable[[], None]] = None\n        assert self.parent is not None\n>       self._testcase = self.parent.obj(self.name)  # type: ignore[attr-defined]\nE       TypeError: __init__() takes 1 positional argument but 2 were given\n\n../../Library/Python/3.9/lib/python/site-packages/_pytest/unittest.py:201: TypeError\n", "test_name": "test_postedit", "rerun": "0"}}, "suite_name": "main.py"}}}, "date": "February 14, 2024", "start_time": 1707903426.783471, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "8", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "8"}